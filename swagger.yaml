openapi: 3.0.0
info:
  title: Idempotency API
  version: 1.0.0
  description: API for managing transactions with idempotency support.
  contact:
    name: yoanes berchmans
    email: yoanes.berchmans89@gmail.com

servers:
  - url: http://localhost:4000
    description: Local server
  # - url: https://your-production-url.com
  #   description: Production server

tags:
  - name: Transactions
    description: API for managing transactions with idempotency support

paths:
  /api/transactions:
    get:
      operationId: getAllTransactions
      summary: Get all transactions
      description: Fetch all transactions with optional pagination, sorting, and filtering.
      tags:
        - Transactions
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: Number of notes per page
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          required: false
          description: Field to sort by (e.g., createdAt, updatedAt)
          schema:
            type: string
            default: createdAt
        - name: sortOrder
          in: query
          required: false
          description: Sort order (asc or desc)
          schema:
            type: string
            default: desc
      responses:
        '200':
          description: Transactions fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transactions fetched successfully
                  error:
                    type: string
                    example: null
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: uuid
                          example: bffb7ddf-6bae-44c7-b912-e2cf7a3d78dd
                        type:
                          type: string
                          example: payment
                        amount:
                          type: number
                          example: 100.00
                        status:
                          type: string
                          example: pending
                        createdAt:
                          type: string
                          format: date-time
                          example: '2025-07-22T15:35:31.312Z'
                        updatedAt:
                          type: string
                          format: date-time
                          example: '2025-07-22T15:35:31.312Z'
                  path:
                    type: string
                    example: /api/transactions?page=1&limit=10&sortBy=createdAt&sortOrder=desc
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-07-22T15:35:31.312Z'
    post:
      operationId: createTransaction
      summary: Create a new transaction
      description: Create a new transaction with type, amount and consumerId.
      tags:
        - Transactions
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: |
            A unique UUID v4 provided by the client to ensure idempotent operations.
            Requests with the same Idempotency-Key will not be processed more than once.
          schema:
            type: string
            example: 8c3a2ed8-7f67-4f0e-aabc-3e2d725f6f01
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: payment
                amount:
                  type: number
                  example: 100.00
                consumerId:
                  type: uuid
                  example: bffb7ddf-6bae-44c7-b912-e2cf7a3d78dd
              required:
                - type
                - amount
                - consumerId
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction created successfully
                  error:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      id:
                        type: uuid
                        example: 4bc5517e-e2b6-4603-9ee4-efade549d70f
                      type:
                        type: string
                        example: payment
                      amount:
                        type: number
                        example: 100.00
                      status:
                        type: string
                        example: pending
                      consumerId:
                        type: uuid
                        example: bffb7ddf-6bae-44c7-b912-e2cf7a3d78dd
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-07-23T05:07:52.854Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-07-23T05:07:52.854Z'
                  path:
                    type: string
                    example: /api/transactions
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-07-23T05:07:52.895Z'
        '200':
          description: Transaction already processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction already processed
                  error:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      id:
                        type: uuid
                        example: 4bc5517e-e2b6-4603-9ee4-efade549d70f
                      type:
                        type: string
                        example: payment
                      amount:
                        type: number
                        example: 100.00
                      status:
                        type: string
                        example: pending
                      consumerId:
                        type: uuid
                        example: bffb7ddf-6bae-44c7-b912-e2cf7a3d78dd
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-07-23T05:07:52.854Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-07-23T05:07:52.854Z'
                  path:
                    type: string
                    example: /api/transactions
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-07-23T05:11:53.874Z'